{
  "x-actionschema": "0.0.1",
  "$schema": "https://raw.githubusercontent.com/CodeFromAnywhere/ActionSchema/main/schemas/openapi.schema.json",
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI CRUD",
    "version": "1.0",
    "description": ""
  },

  "servers": [{ "url": "https://data.actionschema.com" }],
  "security": [{ "oauth2": [] }],

  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.actionschema.com/oauth/authorize",
            "tokenUrl": "https://auth.actionschema.com/oauth/access_token",
            "scopes": {
              "admin": "Full access to all services",
              "admin:{projectSlug}": "Access to manage a project"
            }
          }
        }
      }
    },
    "schemas": {
      "UrlSlug": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._~-]+$",
        "minLength": 1,
        "maxLength": 64,
        "description": "Slug compatible with URLs"
      },

      "CreateDatabaseResponse": {
        "type": "object",
        "required": ["isSuccessful"],
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "authToken": { "type": "string" },
          "adminAuthToken": { "type": "string" },
          "databaseSlug": { "type": "string" },
          "openapiUrl": { "type": "string" }
        }
      },

      "VectorIndexColumns": {
        "description": "A list of vector indexes to be created for several columns in your schema",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "propertyKey": { "type": "string" },
            "model": {
              "type": "string",
              "enum": [
                "text-embedding-ada-002",
                "text-embedding-3-small",
                "text-embedding-3-large"
              ]
            },

            "region": {
              "type": "string",
              "enum": ["us-east-1", "eu-west-1", "us-central1"]
            },

            "dimension_count": { "type": "number" },

            "similarity_function": {
              "type": "string",
              "enum": ["COSINE", "EUCLIDIAN", "DOT_PRODUCT"]
            }
          },
          "required": [
            "propertyKey",
            "model",
            "region",
            "dimension_count",
            "similarity_function"
          ]
        }
      },

      "StandardResponse": {
        "type": "object",
        "required": ["isSuccessful"],
        "properties": {
          "status": { "type": "number" },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "priceCredit": {
            "type": "number"
          }
        }
      }
    }
  },

  "paths": {
    "/listDatabases": {
      "get": {
        "summary": "List your databases",
        "operationId": "listDatabases",
        "responses": {
          "200": {
            "description": "My DB List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isSuccessful": { "type": "boolean" },
                    "message": { "type": "string" },
                    "status": { "type": "number" },
                    "currentProjectSlug": {
                      "type": "string",
                      "description": "The slug of the project these databases belong to"
                    },
                    "databases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "databaseSlug",
                          "authToken",
                          "schema",
                          "openapiUrl"
                        ],
                        "properties": {
                          "databaseSlug": { "type": "string" },
                          "openapiUrl": { "type": "string" },
                          "authToken": {
                            "type": "string",
                            "description": "Bearer Authorization token to be used for the openapi of this specific database. Can be used interchangeably to the admin authtoken."
                          },
                          "schema": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/upsertDatabase": {
      "post": {
        "summary": "Create or update a database model",
        "operationId": "upsertDatabase",

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["schemaString", "databaseSlug"],
                "properties": {
                  "databaseSlug": {
                    "title": "Database ID",
                    "description": "Unique slug for the database to be used as prefix to the endpoints.",
                    "$ref": "#/components/schemas/UrlSlug"
                  },

                  "schemaString": {
                    "title": "Schema",
                    "type": "string",
                    "description": "JSON of the schema you want the database to refer to. Should be a Object JSON Schema."
                  },

                  "authToken": {
                    "type": "string",
                    "description": "Token required to authrorize using the CRUD endpoints. Will be generated if not given.",
                    "minLength": 32,
                    "maxLength": 128
                  },

                  "isUserLevelSeparationEnabled": {
                    "type": "boolean",
                    "description": "If true, api will use oauth2 to authenticate, and will add key prefix to it so only the keys for the user will be able to be managed."
                  },

                  "region": {
                    "description": "Can be set for a new database. Cannot be changed",
                    "type": "string",
                    "enum": [
                      "eu-west-1",
                      "us-east-1",
                      "us-west-1",
                      "ap-northeast-1",
                      "us-central1"
                    ]
                  },

                  "vectorIndexColumns": {
                    "$ref": "#/components/schemas/VectorIndexColumns"
                  },
                  "openaiApiKey": {
                    "type": "string",
                    "description": "Needed if you use vectorIndexColumns"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create database response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDatabaseResponse"
                }
              }
            }
          }
        }
      }
    },

    "/removeDatabase": {
      "post": {
        "summary": "Remove a database",
        "operationId": "removeDatabase",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "databaseSlug": {
                    "$ref": "#/components/schemas/UrlSlug"
                  }
                },
                "required": ["databaseSlug"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },

    "/setCurrentProject": {
      "post": {
        "summary": "Set a project",
        "operationId": "setCurrentProject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectSlug": {
                    "$ref": "#/components/schemas/UrlSlug"
                  },
                  "description": { "type": "string" }
                },
                "required": ["projectSlug"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },

    "/listProjects": {
      "get": {
        "summary": "List projects",
        "operationId": "listProjects",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isSuccessful": { "type": "boolean" },
                    "message": { "type": "string" },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "projectSlug": {
                            "$ref": "#/components/schemas/UrlSlug"
                          },
                          "description": {
                            "type": "string"
                          },
                          "databaseSlugs": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        }
                      }
                    },
                    "currentProjectSlug": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/removeProject": {
      "post": {
        "summary": "Remove a project",
        "operationId": "removeProject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectSlug": {
                    "$ref": "#/components/schemas/UrlSlug"
                  }
                },
                "required": ["projectSlug"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },

    "/openapi.json": {
      "get": {
        "security": [{ "oauth2": [] }, {}],
        "summary": "Get openapi",
        "operationId": "getOpenapi",
        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/CodeFromAnywhere/ActionSchema/main/schemas/openapi.schema.json"
                }
              }
            }
          }
        }
      }
    },

    "/{databaseSlug}/openapi.json": {
      "get": {
        "security": [{ "oauth2": [] }, {}],
        "summary": "Get openapi for this database table alone",
        "operationId": "getCrudOpenapi",
        "parameters": [
          {
            "in": "path",
            "name": "databaseSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "https://raw.githubusercontent.com/CodeFromAnywhere/ActionSchema/main/schemas/openapi.schema.json"
                    },
                    {
                      "type": "object",
                      "required": ["isSuccessful"],
                      "properties": {
                        "isSuccessful": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/project/{projectSlug}/openapi.json": {
      "get": {
        "security": [{ "oauth2": [] }, {}],
        "summary": "Get Project OpenAPI",
        "operationId": "getProjectOpenapi",
        "parameters": [
          {
            "in": "path",
            "name": "projectSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "https://raw.githubusercontent.com/CodeFromAnywhere/ActionSchema/main/schemas/openapi.schema.json"
                    },
                    {
                      "type": "object",
                      "required": ["isSuccessful"],
                      "properties": {
                        "isSuccessful": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/project/{projectSlug}/schema.json": {
      "get": {
        "security": [{ "oauth2": [] }, {}],
        "summary": "Get Project OpenAPI",
        "operationId": "getProjectSchema",
        "parameters": [
          {
            "in": "path",
            "name": "projectSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": true
                }
              }
            }
          }
        }
      }
    },

    "/{databaseSlug}/schema.json": {
      "get": {
        "security": [{ "oauth2": [] }, {}],
        "summary": "Get schema for a database",
        "operationId": "getSchema",
        "parameters": [
          {
            "in": "path",
            "name": "databaseSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": true
                }
              }
            }
          }
        }
      }
    }
  }
}
